@startuml LogUtill.png

interface System.IDisposable {
  + {abstract} Dispose()
}

interface LOG.ILogParts {
  + {abstract} WriteLog(message:String, Optional parameters:List(Of Object))
  + {abstract} WriteLog(e:Exception, Optional parameters:List(Of Object))
}
System.IDisposable <|-- LOG.ILogParts

class LOG.LogTool {
  + {static} LogInstance:LOG.ILogParts
  + {static} Output:Boolean = True

  - New()
  + {static} WriteLog(message:String, Optional parameters:List(Of Object))
  + {static} WriteLog(e:Exception, Optional parameters:List(Of Object))
}
LOG.LogTool *-- LOG.ILogParts

class LOG.DefaultLogPartsImpl {
  - {static} instance:LOG.DefaultLogPartsImpl

  - New()
  ~ {static} CreateInstance():LOG.DefaultLogPartsImpl
  + WriteLog(message:String, Optional parameters:List(Of Object))
  + WriteLog(e:Exception, Optional parameters:List(Of Object))
  + Dispose()
}
LOG.ILogParts <|.. LOG.DefaultLogPartsImpl

class OtherLogPartsImpl {
  + WriteLog(message:String, Optional parameters:List(Of Object))
  + WriteLog(e:Exception, Optional parameters:List(Of Object))
  + Dispose()
}
LOG.ILogParts <|.. OtherLogPartsImpl

@enduml
