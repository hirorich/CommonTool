@startuml LogUtill.png

interface System.IDisposable {
  + {abstract} Dispose()
}

interface LOG.ILogTool {
  + {abstract} WriteLog(message:String, Optional parameters:List(Of Object))
}
System.IDisposable <|-- LOG.ILogTool

class LOG.LogTool {
  + {static} LogInstance:LOG.ILogTool
  + {static} Output:Boolean = True

  - New()
  + {static} WriteLog(message:String, Optional parameters:List(Of Object))
  + {static} WriteLog(e:Exception, Optional parameters:List(Of Object))
}
LOG.LogTool *-- LOG.ILogTool

class LOG.DefaultLogToolImpl {
  - {static} instance:LOG.DefaultLogToolImpl

  - New()
  ~ {static} CreateInstance():LOG.DefaultLogToolImpl
  + WriteLog(message:String, Optional parameters:List(Of Object))
  + Dispose()
}
LOG.ILogTool <|.. LOG.DefaultLogToolImpl

class OtherLogToolImpl {
  + WriteLog(message:String, Optional parameters:List(Of Object))
  + Dispose()
}
LOG.ILogTool <|.. OtherLogToolImpl

@enduml
